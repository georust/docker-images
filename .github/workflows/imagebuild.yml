name: Build and Push Georust Docker Images

on:
  push:
    branches:
      - main
      - staging
      - trying
  pull_request:
  merge_group:

env:
  LIBPROJ_VERSION: 9.4.0
  BASE_IMAGE_NAME: libproj-builder

jobs:
  build_base_image:
    name: Build the base image for geo and proj
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust_version: [1.77]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Up Builder
      run: |
        docker buildx create --name mybuilder
        docker buildx use mybuilder
        docker buildx inspect --bootstrap

    - name: Build and push base Dockerfile
      id: basebuild
      uses: docker/build-push-action@v5
      with:
        file: ./dockerfiles/${{ env.BASE_IMAGE_NAME }}
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/${{ env.BASE_IMAGE_NAME }}:proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}
        outputs: type=docker,dest=/tmp/${{ env.BASE_IMAGE_NAME }}-proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}.tar
        build-args: |
              RUST_VERSION=${{ matrix.rust_version }}
              PROJ_VERSION=${{ env.LIBPROJ_VERSION }}

    - name: Test base image
      if: steps.basebuild.outcome == 'success'
      run: |
        # docker run -v ${{ github.workspace }}:/tmp/georust -e CARGO_TARGET_DIR=/tmp/cargo-target -w /tmp/georust/geo georust/${{ env.BASE_IMAGE_NAME }}:${{ github.repository_owner }}/${{ env.BASE_IMAGE_NAME }}:proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }} /bin/bash -c "cargo test"
    - name: Upload Image to artifact cache
      if: steps.basebuild.outcome == 'success'
      uses: actions/upload-artifact@v4
      with:
          retention-days: 1
          name: ${{ env.BASE_IMAGE_NAME }}-proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}
          path: /tmp/${{ env.BASE_IMAGE_NAME }}-proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}.tar



  build_dependent_images:
    name: Build dependent images for geo and proj
    needs: build_base_image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        docker_image_name:
          - proj-ci
          - proj-ci-without-system-proj
          - geo-ci
        rust_version: [1.77]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Up Builder
      run: |
        docker buildx create --name mybuilder
        docker buildx use mybuilder
        docker buildx inspect --bootstrap

    - name: Build ${{ matrix.docker_image_name }}
      uses: docker/build-push-action@v5
      with:
        file: ./dockerfiles/${{ matrix.docker_image_name }}
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.docker_image_name }}:proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}
        outputs: type=docker,dest=/tmp/${{ matrix.docker_image_name }}-proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}.tar
        build-args: |
              RUST_VERSION=${{ matrix.rust_version }}
              PROJ_VERSION=${{ env.LIBPROJ_VERSION }}

    - name: Test ${{ matrix.docker_image_name }} image
      run: |
        # docker run -v ${{ github.workspace }}:/tmp/georust -e CARGO_TARGET_DIR=/tmp/cargo-target -w /tmp/georust/geo georust/geo-ci:${{ github.repository_owner }}/${{ matrix.docker_image_name }}:proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }} /bin/bash -c "cargo test"
    - name: Upload Image to artifact cache
      uses: actions/upload-artifact@v4
      with:
          retention-days: 1
          name: ${{ matrix.docker_image_name }}-proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}
          path: /tmp/${{ matrix.docker_image_name }}-proj-${{ env.LIBPROJ_VERSION }}-rust-${{ matrix.rust_version }}.tar

